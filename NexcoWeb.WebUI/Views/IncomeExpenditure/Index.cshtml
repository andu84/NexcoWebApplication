@model IEnumerable<NexcoWeb.Domain.Entities.Budget>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    var userName = HttpContext.Current.User.Identity.Name;
}
<div class="row panel panel-default">
    <div id="categoris" class="col-lg-3">
        @Html.Action("Menu", "Nav")
    </div>
    <div class="panel-heading col-lg-9">
        <div class="panel-body">
            <h2>
                <span class="text-info">
                    Welcome back,
                    <strong class="text-capitalize"> @userName!! </strong>
                </span>
            </h2>
            <h4>
                <span class="text-info">
                    Last details of your Budget on <strong> @DateTime.Now.ToString("dd/MM/yyyy")</strong>
                </span>
            </h4>
            <table class="table table-striped table-condesed table-bordered">
                <tr>
                    <th>Date</th>
                    <th>Total Incomes</th>
                    <th>Total expenditure</th>
                    <th>Budget avaible</th>
                    <th>Feedback</th>
                    <th></th>
                    <th></th>
                </tr>
                @*Loop through Model items*@
                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            <b>@item.Income.DisplayDateIncomes</b>
                        </td>
                        <td> @item.Income.TotalIncome</td>
                        <td> @item.Expenditure.TotalExpense</td>
                        <td>
                            @{ int? total;
                                total = item.Income.TotalIncome - item.Expenditure.TotalExpense;}
                            @total
                            @{
                                int? Income = item.Income.TotalIncome;
                                int? Expense = item.Expenditure.TotalExpense;
                                // If expenses exceed incomes
                                if (Expense > Income)
                                {
                                <td class="bg-danger">
                                    Your expenses exceed
                                    <br /> your income!
                                </td>
                            }
                            int? halfIncome = Income / 2;
                            // If the income is 2 times more than the expenses
                            if (halfIncome > Expense)
                            {
                                <td class="bg-success">
                                    This is greate!
                                    <br />
                                    You saved more than half of your incomes!
                                </td>
                            }
                            int? threeQuarterIncome = Income - Income / 4;
                            //user will receive notifications if the expenses exceed  three quarters of the income
                            //and are smaller than total income
                            if (Expense >= threeQuarterIncome & Expense < Income)
                            {
                                <td class="bg-warning">
                                    Your expenses have exceeded
                                    <br />
                                    three quarters of your incomes!!
                                </td>
                            }
                            //User receive  notification only when the expenses exceed half of the income
                            //and are smaller than total income
                            if (threeQuarterIncome > Expense & Expense > halfIncome)
                            {
                                <td class="bg-info">

                                    Great, you saved some money!
                                </td>
                            }
                            }

                            <td>
                                <div class="btn btn-info btn-xs">

                                    @Html.ActionLink("Edit Incomes", "../Admin/EditIncome", new { IncomeId = item.Income.IncomeId })
                                </div>
                            </td>
                            <td>
                                <div class="btn btn-info btn-xs">
                                    @Html.ActionLink("Edit Expenditure", "../AdminExpenditure/EditExpenditure", new { ExpenditureId = item.Expenditure.ExpenditureId })
                                </div>
                            </td>
                        </tr>
                    }
            </table>
        </div>

        <div class="panel-footer">
            @Html.ActionLink("Add new Expenditure", "../AdminExpenditure/Create", null, new { @class = "btn btn-defaul" })
            @Html.ActionLink("Add new Incomes", "../Admin/Create", null, new { @class = "btn btn-defaul" })
        </div>
    </div>
</div>



